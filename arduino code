#include <Wire.h>
#include <LiquidCrystal_I2C.h>
LiquidCrystal_I2C lcd(0x27, 20, 4);

#define green1 8
#define orange1 9
#define red1 10
#define green2 4
#define orange2 5
#define red2 6

int oldpassage = 10;  // Initialize the variable to hold the previous passage count
const int buttonPin = 3;  // Pin for the button to switch modes
const int buttonPin2 = 2; // Pin for the button to simulate passing cars
volatile int change = 1; // Flag for mode change
int mode = 2; // Current mode of the intersection
long debouncing_time = 200; // Debouncing time for button presses
volatile unsigned long last_micros; // Variable to store the last microsecond value
unsigned long previousMillis = 0; // Variable to store the last time a certain event occurred
const long interval1 = 500; // Interval for traffic light changes in day mode
const long interval2 = 500; // Interval for traffic light changes in night mode
unsigned long currentMillis; // Current millis value for comparison
volatile int i1 = 0; // Index for day mode traffic light patterns
volatile int i2 = 0; // Index for night mode traffic light patterns
volatile int passage = 0; // Counter for the number of cars passing
int set_red = 1; // Variable to set the red light

// Array to store day mode traffic light patterns
int array_day[8][6] = {{0,0,1,0,0,1},
                 {0,1,1,0,0,1},
                 {1,0,0,0,0,1},
                 {1,0,0,0,0,1},
                 {0,1,0,0,0,1},
                 {0,0,1,0,1,1},
                 {0,0,1,1,0,0},
                 {0,0,1,0,1,0}};

// Array to store night mode traffic light patterns
int array_night[6][6] = {{0,1,0,0,1,0},
                     {0,0,0,0,0,0},
                     {0,1,0,0,1,0},
                     {0,0,0,0,0,0},
                     {0,1,0,0,1,0},
                     {0,0,0,0,0,0}};             

void setup() {
    lcd.begin();
    lcd.backlight();
    Serial.begin(9600);
    pinMode(green1, OUTPUT);
    pinMode(orange1, OUTPUT);
    pinMode(red1, OUTPUT);
    pinMode(green2, OUTPUT);
    pinMode(orange2, OUTPUT);
    pinMode(red2, OUTPUT);
    pinMode(buttonPin, INPUT);
    // Attach interrupt for mode change button
    attachInterrupt(digitalPinToInterrupt(buttonPin), debounce, RISING);
    // Attach interrupt for car simulation button
    attachInterrupt(digitalPinToInterrupt(buttonPin2), car, RISING);
}

void loop(){
   vypis();
   
  while (mode == 1){
     day();  
  }
  
  while (mode == 2){
     night();     
   } 
}

// Function to display day mode on LCD
void vypis (){
  if (mode = 1){ // Should be if (mode == 1)
   Serial.println("day");
   lcd.clear();
   lcd.setCursor(0, 0);
   lcd.print("day");
   delay (1000);
 }
}

// Function for debouncing mode change button
void debounce(){
 if((long)(micros() - last_micros) >= debouncing_time * 1000) {
    change = 1;
    i2 = 0;
    passage = 0;
    last_micros = micros();
   }
}

// Function for simulating passing cars
void car(){
 if((long)(micros() - last_micros) >= debouncing_time * 1000) {
    passage++;
    i1 = 0;
    last_micros = micros();
   }
}

// Function for changing between day and night
void day(){
   if (change == 1){
      if (mode < 2){
          mode++;
       }
      else{
         mode = 1;   
        }
        change = 0;
   
      }
//Timing for another step in day mode 
      currentMillis = millis();
    if (currentMillis - previousMillis >= interval1) {    
        previousMillis = currentMillis;
              digitalWrite(green1,array_day[i1][0]);
              digitalWrite(orange1,array_day[i1][1]);
              digitalWrite(red1,array_day[i1][2]);
              digitalWrite(green2,array_day[i1][3]);
              digitalWrite(orange2,array_day[i1][4]);
              digitalWrite(red2,array_day[i1][5]);

              if (i1<7){
                i1++;
              }
              else{
                i1=1;
              }          
   }
}

// Function for night mode operations
void night(){
   if ((oldpassage!=passage) && (mode==2)){ // Check if passage count changed and if in night mode
   Serial.print("Cars passed: ");
   Serial.println(passage);
   Serial.println("night");
   oldpassage = passage;
   }
   if (passage == 5){ // If 5 cars have passed
      if (mode < 2){ // If not already in day mode
          mode++;
       }
      else{
         mode = 1;   
        }
   }
//Timing of blinking in night mode
    currentMillis = millis();
    if (currentMillis - previousMillis >= interval2) {    
        previousMillis = currentMillis;
              digitalWrite(green1,array_night[i2][0]);
              digitalWrite(orange1,array_night[i2][1]);
              digitalWrite(red1,array_night[i2][2]);
              digitalWrite(green2,array_night[i2][3]);
              digitalWrite(orange2,array_night[i2][4]);
              digitalWrite(red2,array_night[i2][5]);

              if (i2<5){
                i2++;
              }
              else{
                i2=4;
              }              
     }

}
